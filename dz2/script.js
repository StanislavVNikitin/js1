/* 1. Объясните почему код даёт именно такие результаты?
Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки. */

//пример 1
// let a = 1, b = 1, c, d;
// c = ++a;
// alert(c); // ответ: 2
// Решение:
//  ++a - унарная префексная операция присвоедние единицы. 
//  Сперва производится присвоение единицы к числу в переменно 'а' после производится присвоение переменной 'с' значение увеличенной переменно 'a'. 
//  Соотвественно alert вывдоит значени 'с' как увеличенное значение  переменной 'a' 1 на единицу = 2.


//пример 2
// d = b++;
// alert(d); //ответ: 1
// Решение:
//  b++ унарная постфиксная операция присвоедние единицы. Постфиксная операция производится после всех остальный операция. 
//  По этому пв первую очередь производится присвоение переменной 'd' значение не измененной переменно 'b', а после производится присвоение единицы к числу в переменной 'b'.
//  alert вывдоит значени 'd' как значение не измененной переменной 'b' 1.


//пример 3
// c = 2 + ++a;
// alert(c); //ответ: 5
// Решение:
//  Данный пример аналогичен первому. 
//  Но внем две операции: бинарная операция сложения  2  и увеличинной на 1 унарной постфиксной операцией 'a' каторая равна 3 к моменту сложения,
//  так как после первой строки значение переменной 'a' равнялось 2 и в унарной операции ++ прибавляется 1. 2 + 3 = 5

//пример 4
// d = 2 + b++;
// alert(d); //ответ: 4
//  Выражения аналогично третему коду с отличием что унарная операция префексная.
//  В этой операции хоть переменная 'b' и имеет на входе значение 2> но унарная операция с ней происходит в самом конце, после присвоения виражения переменной 'd'. Но после четвертой строчки значение 'b' будет уже равно 3. 

// alert(a); //3
// alert(b); //3
//  В 5 и 6 строке кода выводятся значения переменных 'a' 'b' каторые в предыдущех строках кода по два раз были увеличины унарными операциями на единицу. 
//  И уже на этот момент, не имеет значение, какого типа были унарные операции, значение типа пост и префиксности влияет на действие только в пределах выражения, то есть до ;.

/* 2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
(описать последовательность действий). */

//let a = 2;
//let x = 1 + (a *= 2);
// Решение: 
// выражение a *=2 короткий оператор присвоения с математическим действием умножение на 2 И аналогично полной форме записи a = a * 2. 
// Тогда данное выражение можно записать полностью:
// x = 1 + (a *= 2) 
// x = 1 + (a = a * 2 )
// x = 1 + (2 * 2 ) 
// x = 1 + 4 = 5;

var a = 2;
var x = 1 + (a *= 2);
console.log('Второе задание: a = 2, x = 1 + (a *= 2) и равен ' + x);


/* 3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму; */
function taskSolution (a, b) {

    var message;
    
    if ( a >= 0 && b >= 0 ) {
        message = " переменная 'a' и 'b' положительные. Выводим разность " + a + " - " + b  +" = " + ( a - b );
    
    } else if ( a < 0 && b < 0 ) {
        message = " переменная 'a' и 'b' отрицательные. Выводим произведение " + a + " * " + b + " = "  + ( a * b );
    
    } else {
        message = " переменная 'a' и 'b' имеют разные знаки. Выводим сумму " + a + " + " + b  +" = "  + ( a + b );
    };
    return message;
    };
    
    var a = - 10;
    var b = - 2;
    
    console.log("Решение третьего задания: Значение переменной 'a' = " + a + "  Значение переменной 'b' = " + b + taskSolution(a, b));

    
/* 4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с
двумя параметрами. Т.е. например, функция для сложения должна принимать два числа,
складывать их и возвращать результат. Обязательно использовать оператор return. */
a = 12;
b = 3;

function sum(a,b){
	return ( +a + +b );
}

function mult(a,b){
	return ( a * b );
}

function div(a,b){
	return ( a / b );
}

function subt(a,b){
	return ( a - b );
}

function pow(x, n) {
    if (n !=1) {
        return x * pow(x, n-1);
    }else {
        return x;
    }
}

console.log('Переменная a = ' + a + ' Переменная b = ' + b + ' Сумма = ' + sum(a,b) + ' умножение = ' + mult(a,b) + ' деление = ' + div(a,b) + ' вычитание = ' + subt(a,b) + ' возведение ' + a + ' в степень ' + b + ' = ' + pow(a,b));

/* 5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических операций
(использовать функции из задания 4) и вернуть полученное значение. */

function mathOperation(arg1,arg2,operation){
    var messege;
    switch ( operation ){
    
    case '*':
    case 'умножение':
        messege = 'Операция умножение чисел ' + arg1 + ' и ' + arg2 + ' = ' + mult(arg1,arg2);
        break;
    
    case '/':
    case 'деление':
        messege = 'Операция деления чисел ' + arg1 + ' и ' + arg2 + ' = ' + div(arg1,arg2);
        break;
   
   case '+':
    case 'сложение':
        messege = 'Операция сложения чисел ' + arg1 + ' и ' + arg2 + ' = ' + sum(arg1,arg2);
        break;
    
    case '-':
    case 'вычитание':
         messege = 'Операция вычитания чисел ' + arg1 + ' и ' + arg2 + ' = ' + subt(arg1,arg2);
        break;

    case '^':
    case 'степень':
         messege = 'Операция возведения чисела ' + arg1 + '  в степень ' + arg2 + ' = ' + subt(arg1,arg2);
        break;
    
    default:
        messege = 'Была введена не существующая операция! Введите нормальную операцию.';
    };

    return messege;
}

console.log(mathOperation(a, b,'+')); 


/* 6**. (Это задание не является частью курса, можете его не делать, оно для тех кому мало 
    обычных заданий, требует времени и возможно гугления, делайте по желанию.)
    
    Программа должна спросить у пользователя число, это будет количество денег, которое
    он хочет положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
    "Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
    "Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
    "Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
    То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного числа. */


function contextRubl(cache) {
    cachestr = String(cache);
        if(cachestr.length >= 2){
            if(cachestr[cachestr.length-2] == "1"){
                        return "рублей";
            }
        } 
        switch (cachestr[cachestr.length-1]) {
            case '0':
            case '5': 
            case '6':
            case '7':
            case '8':
            case '9':    
                return "рублей";
            case '1':
                return "рубль";
            case '2':
            case '3':
            case '4':
                return "рубля";
        }
}

const cache = Number(prompt("Какую сумму денег в рублях вы хотите внести на счет"));
if (!isNaN(cache)){
    console.log("Ваша сумма в " + cache + " " + contextRubl(cache) + " успешно зачислена.");
}else{
    console.log("Введена не корректная сумма");
}

